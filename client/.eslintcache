[{"C:\\Users\\kbk\\Desktop\\React Project Tutorial\\management\\client\\src\\index.js":"1","C:\\Users\\kbk\\Desktop\\React Project Tutorial\\management\\client\\src\\App.js":"2","C:\\Users\\kbk\\Desktop\\React Project Tutorial\\management\\client\\src\\reportWebVitals.js":"3","C:\\Users\\kbk\\Desktop\\React Project Tutorial\\management\\client\\src\\components\\Customer.js":"4","C:\\Users\\kbk\\Desktop\\React Project Tutorial\\management\\client\\src\\components\\CustomerAdd.js":"5","C:\\Users\\kbk\\Desktop\\React Project Tutorial\\management\\client\\src\\components\\CustomerDelete.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":3201,"mtime":1615865567472,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":879,"mtime":1615865465341,"results":"11","hashOfConfig":"8"},{"size":2672,"mtime":1615860467643,"results":"12","hashOfConfig":"8"},{"size":444,"mtime":1615865749610,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"fm7ahb",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kbk\\Desktop\\React Project Tutorial\\management\\client\\src\\index.js",[],["28","29"],"C:\\Users\\kbk\\Desktop\\React Project Tutorial\\management\\client\\src\\App.js",["30"],"import React, {Component} from 'react';\nimport './App.css';\nimport CustomerAdd from './components/CustomerAdd';\nimport Customer from './components/Customer';\nimport { render } from '@testing-library/react';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = theme => ({\n  root : {\n    width: '100%',\n    marginTop : theme.spacing.unit * 3,\n    overflowX: \"auto\"\n  },\n  table : {\n    minWidth: 1080\n  },\n  progress: {\n    margin : theme.spacing.unit * 2\n  }\n});\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      customers : '',\n      completed : 0\n    }\n  }\n\n  stateRefresh = () => { //state 값 갱신\n    this.setState({ \n      customers: '',\n      completed: 0\n    })\n\n    this.callApi() //고객데이터 호출\n    .then(res => this.setState({customers: res}))\n    .catch(err => console.log(err)); // 예외처리\n\n  }\n\n  componentDidMount(){\n    this.timer = setInterval(this.progress, 20);\n    \n    this.callApi()\n    .then(res => this.setState({customers: res}))\n    .catch(err => console.log(err));\n    \n  }\n\n  callApi = async() => {\n    const response = await fetch('/api/customers');\n    const body = await response.json();\n    return body;\n  }\n\n  progress = () => {\n    const { completed } = this.state;\n    this.setState({ completed: completed >= 100 ? 0 : completed + 1 });\n  }\n\n  render(){\n    const { classes } = this.props;\n    return (\n      <div>\n      <Paper className={classes.root}>\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              <TableCell>번호</TableCell>\n              <TableCell>이미지</TableCell>\n              <TableCell>이름</TableCell>\n              <TableCell>생년월일</TableCell>\n              <TableCell>성별</TableCell>\n              <TableCell>직업</TableCell>\n              <TableCell>설정</TableCell>\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {this.state.customers ? this.state.customers.map(c=> {\n            return(\n              <Customer\n                stateRefresh = {this.stateRefresh} //삭제 이후에 stateRefresh가 이루어져야 한다.\n                key = {c.id}\n                id ={c.id}\n                image ={c.image}\n                name ={c.name}\n                birthday ={c.birthday}\n                gender ={c.gender}\n                job ={c.job}\n              />\n            );\n          }) : \n            <TableRow>\n              <TableCell colSpan=\"6\" align=\"center\">\n                <CircularProgress className={classes.progress}  value={this.state.completed}/>\n              </TableCell>\n            </TableRow>}\n          </TableBody>\n        </Table>\n    </Paper>\n    <CustomerAdd stateRefresh = {this.stateRefresh} />\n    </div>\n\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","C:\\Users\\kbk\\Desktop\\React Project Tutorial\\management\\client\\src\\reportWebVitals.js",[],"C:\\Users\\kbk\\Desktop\\React Project Tutorial\\management\\client\\src\\components\\Customer.js",[],"C:\\Users\\kbk\\Desktop\\React Project Tutorial\\management\\client\\src\\components\\CustomerAdd.js",[],"C:\\Users\\kbk\\Desktop\\React Project Tutorial\\management\\client\\src\\components\\CustomerDelete.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":5,"column":10,"nodeType":"37","messageId":"38","endLine":5,"endColumn":16},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]